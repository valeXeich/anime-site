# Generated by Django 4.0.2 on 2022-02-17 10:32

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Anime',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250, verbose_name='Название')),
                ('second_title', models.CharField(blank=True, max_length=250, null=True, verbose_name='Другое название')),
                ('poster', models.ImageField(upload_to='anime_poster/', verbose_name='Постер')),
                ('description', models.TextField(verbose_name='Описание')),
                ('year', models.DateField(verbose_name='Год выпуска')),
                ('total_series', models.PositiveIntegerField(verbose_name='Кол-во серий')),
                ('status', models.CharField(choices=[('released', 'Вышел'), ('ongoing', 'Онгоинг'), ('announcement', 'Анонс')], max_length=200, verbose_name='Статус')),
                ('age_rating', models.CharField(choices=[('six', '6+'), ('thirteen', '13+'), ('sixteen', '16+'), ('eighteen', '18+')], max_length=200, verbose_name='Возрастной рейтинг')),
                ('season', models.CharField(choices=[('autumn', 'Осень'), ('winter', 'Зима'), ('spring', 'Весна'), ('summer', 'Лето')], max_length=200, verbose_name='Сезон')),
                ('type', models.CharField(choices=[('series', 'Сериал'), ('feature_film', 'Полнометражный фильм'), ('short_film', 'Короткометражный фильм'), ('ova', 'OVA'), ('special', 'Special'), ('ona', 'ONA')], max_length=200, verbose_name='Тип')),
                ('url', models.SlugField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='AnimeList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Directors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, verbose_name='Режиссер')),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, verbose_name='Жанр')),
            ],
        ),
        migrations.CreateModel(
            name='Studio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, verbose_name='Студия')),
            ],
        ),
        migrations.CreateModel(
            name='WillWatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anime', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='anime.anime')),
                ('anime_list', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='anime.animelist')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='WatchingNow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anime', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='anime.anime')),
                ('anime_list', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='anime.animelist')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Viewed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anime', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='anime.anime')),
                ('anime_list', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_viewed', to='anime.animelist')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Throw',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anime', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='anime.anime')),
                ('anime_list', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_throw', to='anime.animelist')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_birth', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('sex', models.CharField(blank=True, choices=[('man', 'Мужской'), ('female', 'Женский')], max_length=200, null=True, verbose_name='Пол')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='user_avatar/', verbose_name='Аватар')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anime', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='anime.anime')),
                ('anime_list', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_favorite', to='anime.animelist')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(max_length=500, verbose_name='Текст')),
                ('created_date', models.DateTimeField(auto_now=True, verbose_name='Дата создания')),
                ('anime', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='anime.anime')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='anime.comment')),
            ],
        ),
        migrations.AddField(
            model_name='animelist',
            name='favorite',
            field=models.ManyToManyField(blank=True, to='anime.Favorite', verbose_name='Любимые'),
        ),
        migrations.AddField(
            model_name='animelist',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Владелец списка'),
        ),
        migrations.AddField(
            model_name='animelist',
            name='throw',
            field=models.ManyToManyField(blank=True, to='anime.Throw', verbose_name='Брошено'),
        ),
        migrations.AddField(
            model_name='animelist',
            name='viewed',
            field=models.ManyToManyField(blank=True, to='anime.Viewed', verbose_name='Просмотрено'),
        ),
        migrations.AddField(
            model_name='animelist',
            name='watching_now',
            field=models.ManyToManyField(blank=True, to='anime.WatchingNow', verbose_name='Смотрю'),
        ),
        migrations.AddField(
            model_name='animelist',
            name='will_watch',
            field=models.ManyToManyField(blank=True, to='anime.WillWatch', verbose_name='Буду смотреть'),
        ),
        migrations.AddField(
            model_name='anime',
            name='directors',
            field=models.ManyToManyField(to='anime.Directors', verbose_name='Режиссеры'),
        ),
        migrations.AddField(
            model_name='anime',
            name='genre',
            field=models.ManyToManyField(to='anime.Genre', verbose_name='Жанры'),
        ),
        migrations.AddField(
            model_name='anime',
            name='studio',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='anime.studio', verbose_name='Студия'),
        ),
    ]
